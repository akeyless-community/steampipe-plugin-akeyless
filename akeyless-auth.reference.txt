Authenticate to the service and returns a token to be used as a profile to execute the CLI without the need for re-authentication

This command authenticate to the service and saves the temporary credentials, so that it can be used again (via the token) until they expire without the need for re-authenticate every time

Options:

      --access-id                    Access ID
      --access-type[=access_key]     Access Type (access_key/password/saml/ldap/k8s/azure_ad/oidc/aws_iam/universal_identity/jwt/gcp/cert)
      --access-key                   Access key (relevant only for access-type=access_key)
      --cloud-id                     The cloud identity (relevant only for access-type=azure_ad,aws_iam,gcp)
      --uid_token                    The universal_identity token (relevant only for access-type=universal_identity)
      --jwt                          The Json Web Token (relevant only for access-type=jwt/oidc)
      --admin-password               Password (relevant only for access-type=password)
      --admin-email                  Email (relevant only for access-type=password)
      --account-id                   Account id (relevant only for access-type=password where the email address is associated with more than one account)
      --oidc-sp                      OIDC Service Provider (relevant only for access-type=oidc, inferred if empty), supported SPs: google, github
      --ldap_proxy_url               Address URL for LDAP proxy (relevant only for access-type=ldap)
      --username                     LDAP username (relevant only for access-type=ldap)
      --password                     LDAP password (relevant only for access-type=ldap)
      --gcp-audience[=akeyless.io]   GCP audience to use in signed JWT (relevant only for access-type=gcp)
      --gateway-url                  Gateway URL for the K8S authenticated (relevant only for access-type=k8s/oauth2)
      --k8s-auth-config-name         The K8S Auth config name (relevant only for access-type=k8s)
      --k8s-service-account-token    The K8S service account token
      --cert-file-name               Name of the cert file to use (relevant only for access-type=cert)
      --cert-data                    Certificate data encoded in base64. Used if file was not provided. (relevant only for access-type=cert)
      --key-file-name                Name of the private key file to use (relevant only for access-type=cert)
      --key-data                     Private key data encoded in base64. Used if file was not provided.(relevant only for access-type=cert)
      --debug                        Set to 'true' for a printout of the authorization jwts'
  -h, --help                         display help information
      --json[=false]                 Set output format to JSON
      --jq-expression                JQ expression to filter result output
      --no-creds-cleanup[=false]     Do not clean local temporary expired creds
